diff -uNr shadow-4.0.15.orig/lib/getdef.c shadow-4.0.15/lib/getdef.c
--- shadow-4.0.15.orig/lib/getdef.c	2005-12-02 15:16:11.000000000 -0700
+++ shadow-4.0.15/lib/getdef.c	2006-04-16 21:13:15.000000000 -0600
@@ -51,6 +51,8 @@
 	{"CONSOLE_GROUPS", NULL},
 	{"CONSOLE", NULL},
 	{"CREATE_HOME", NULL},
+	{"CRYPT_PREFIX", NULL},
+	{"CRYPT_ROUNDS", NULL},
 	{"DEFAULT_HOME", NULL},
 	{"ENV_PATH", NULL},
 	{"ENV_SUPATH", NULL},
diff -uNr shadow-4.0.15.orig/libmisc/salt.c shadow-4.0.15/libmisc/salt.c
--- shadow-4.0.15.orig/libmisc/salt.c	2005-08-31 11:24:58.000000000 -0600
+++ shadow-4.0.15/libmisc/salt.c	2006-04-16 21:15:08.000000000 -0600
@@ -1,46 +1,71 @@
 /*
  * salt.c - generate a random salt string for crypt()
- *
- * Written by Marek Michalkiewicz <marekm@i17linuxb.ists.pwr.wroc.pl>,
- * public domain.
  */
 
-#include <config.h>
-
-#ident "$Id: salt.c,v 1.10 2005/08/31 17:24:58 kloczek Exp $"
-
-#include <sys/time.h>
+#define _OW_SOURCE
+#include <stdio.h>
+#include <string.h>
+#include <fcntl.h>
 #include <stdlib.h>
-#include "prototypes.h"
-#include "defines.h"
+#include <unistd.h>
+#include <errno.h>
+#include <crypt.h>
+
 #include "getdef.h"
-/*
- * Generate 8 base64 ASCII characters of random salt.  If MD5_CRYPT_ENAB
- * in /etc/login.defs is "yes", the salt string will be prefixed by "$1$"
- * (magic) and pw_encrypt() will execute the MD5-based FreeBSD-compatible
- * version of crypt() instead of the standard one.
- */
-char *crypt_make_salt (void)
+
+#define RANDOM_DEVICE			"/dev/urandom"
+
+static int read_loop(int fd, char *buffer, int count)
+{
+	int offset, block;
+
+	offset = 0;
+	while (count > 0) {
+		block = read(fd, &buffer[offset], count);
+
+		if (block < 0) {
+			if (errno == EINTR) continue;
+			return block;
+		}
+		if (!block) return offset;
+
+		offset += block;
+		count -= block;
+	}
+
+	return offset;
+}
+
+char *
+crypt_make_salt(void)
 {
-	struct timeval tv;
-	static char result[40];
+	int fd;
+	char entropy[16];
+	char *retval;
+
+	fd = open(RANDOM_DEVICE, O_RDONLY);
+	if (fd < 0) {
+		perror("open: " RANDOM_DEVICE);
+		exit(1);
+	}
 
-	result[0] = '\0';
-#ifndef USE_PAM
-	if (getdef_bool ("MD5_CRYPT_ENAB")) {
-		strcpy (result, "$1$");	/* magic for the new MD5 crypt() */
+	if (read_loop(fd, entropy, sizeof(entropy)) != sizeof(entropy)) {
+		close(fd);
+		fprintf(stderr, "Unable to obtain entropy from %s\n",
+			RANDOM_DEVICE);
+		exit(1);
 	}
-#endif
 
-	/*
-	 * Generate 8 chars of salt, the old crypt() will use only first 2.
-	 */
-	gettimeofday (&tv, (struct timezone *) 0);
-	strcat (result, l64a (tv.tv_usec));
-	strcat (result, l64a (tv.tv_sec + getpid () + clock ()));
+	close(fd);
 
-	if (strlen (result) > 3 + 8)	/* magic+salt */
-		result[11] = '\0';
+	retval = crypt_gensalt(getdef_str("CRYPT_PREFIX") ?: "",
+		getdef_num("CRYPT_ROUNDS", 0), entropy, sizeof(entropy));
+	memset(entropy, 0, sizeof(entropy));
+	if (!retval) {
+		fprintf(stderr, "Unable to generate a salt, "
+			"check your CRYPT_PREFIX and CRYPT_ROUNDS settings.\n");
+		exit(1);
+	}
 
-	return result;
+	return retval;
 }
