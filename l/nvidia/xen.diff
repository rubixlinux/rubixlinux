diff -uNr NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/nv-linux.h NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/nv-linux.h
--- NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/nv-linux.h	2006-03-29 16:02:20.000000000 -0700
+++ NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/nv-linux.h	2006-04-27 22:33:16.000000000 -0600
@@ -19,8 +19,8 @@
 #include <linux/utsname.h>
 
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 4, 0)
-#  error This driver does not support pre-2.4 kernels!
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 4, 7)
+#  error This driver does not support 2.4 kernels older than 2.4.7!
 #elif LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
 #  define KERNEL_2_4
 #elif LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 0)
@@ -94,6 +94,7 @@
 
 #include <linux/spinlock.h>
 #include <asm/semaphore.h>
+#include <linux/completion.h>
 #include <linux/highmem.h>
 
 #ifdef CONFIG_PROC_FS
@@ -225,9 +226,13 @@
  * tiny, and the kernel panics when it is exhausted. try to warn the user that
  * they need to boost the size of their pool.
  */
+#if defined(CONFIG_XEN)
+#undef CONFIG_SWIOTLB
+#else
 #if defined(CONFIG_SWIOTLB) && !defined(GFP_DMA32)
 #define NV_SWIOTLB 1
 #endif
+#endif
 
 /*
  * early 2.6 kernels changed their swiotlb codepath, running into a
diff -uNr NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/nv-vm.c NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/nv-vm.c
--- NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/nv-vm.c	2006-03-29 16:02:20.000000000 -0700
+++ NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/nv-vm.c	2006-04-27 22:33:16.000000000 -0600
@@ -497,7 +497,11 @@
         page_ptr->phys_addr = phys_addr;
         page_ptr->page_count = NV_GET_PAGE_COUNT(page_ptr);
         page_ptr->virt_addr = virt_addr;
+#ifdef CONFIG_XEN
+        page_ptr->dma_addr = phys_to_machine(page_ptr->phys_addr);
+#else
         page_ptr->dma_addr = page_ptr->phys_addr;
+#endif
 
         /* lock the page for dma purposes */
         nv_lock_page(page_ptr);
diff -uNr NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/nv.c NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/nv.c
--- NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/nv.c	2006-03-29 16:02:20.000000000 -0700
+++ NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/nv.c	2006-04-27 22:33:16.000000000 -0600
@@ -16,6 +16,9 @@
 #include "os-agp.h"
 #include "nv-vm.h"
 
+#define io_remap_page_range(vma, start, busaddr, size, prot)	\
+	io_remap_pfn_range(vma, start, busaddr>>PAGE_SHIFT, size, prot)
+
 #ifdef MODULE_ALIAS_CHARDEV_MAJOR
 MODULE_ALIAS_CHARDEV_MAJOR(NV_MAJOR_DEVICE_NUMBER);
 #endif
@@ -44,7 +47,11 @@
 
 int nv_pat_enabled = 0;
 
+#ifdef CONFIG_XEN
+static int nv_disable_pat = 1;
+#else
 static int nv_disable_pat = 0;
+#endif
 NV_MODULE_PARAMETER(nv_disable_pat);
 
 #if defined(NVCPU_X86) || defined(NVCPU_X86_64)
@@ -2087,7 +2094,11 @@
             return -ENXIO;
         }
 
+#ifdef CONFIG_XEN
+        if (io_remap_page_range(vma, vma->vm_start,
+#else
         if (NV_REMAP_PAGE_RANGE(vma->vm_start,
+#endif
                              NV_VMA_OFFSET(vma),
                              NV_VMA_SIZE(vma),
                              vma->vm_page_prot))
@@ -2112,7 +2123,11 @@
             }
         }
 
+#ifdef CONFIG_XEN
+        if (io_remap_page_range(vma, vma->vm_start,
+#else
         if (NV_REMAP_PAGE_RANGE(vma->vm_start,
+#endif
                              NV_VMA_OFFSET(vma),
                              NV_VMA_SIZE(vma),
                              vma->vm_page_prot))
@@ -2155,7 +2170,11 @@
         NV_ATOMIC_INC(at->usage_count);
         nv_up(nvl->at_lock);
 
+#ifdef CONFIG_XEN
+        if (io_remap_page_range(vma, vma->vm_start,
+#else
         if (NV_REMAP_PAGE_RANGE(vma->vm_start,
+#endif
                                 NV_VMA_OFFSET(vma),
                                 NV_VMA_SIZE(vma),
                                 vma->vm_page_prot))
diff -uNr NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/os-agp.c NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/os-agp.c
--- NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/os-agp.c	2006-03-29 16:02:20.000000000 -0700
+++ NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/os-agp.c	2006-04-27 22:33:16.000000000 -0600
@@ -284,7 +284,11 @@
 
          page_ptr->phys_addr = (ptr->memory[i] & PAGE_MASK);
          page_ptr->virt_addr = (unsigned long) __va(page_ptr->phys_addr);
+#ifdef CONFIG_XEN
+         page_ptr->dma_addr  = phys_to_machine(page_ptr->phys_addr);
+#else
          page_ptr->dma_addr  = page_ptr->phys_addr;
+#endif
     }
 
     return RM_OK;
diff -uNr NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/os-interface.c NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/os-interface.c
--- NVIDIA-Linux-x86-1.0-8756-pkg1.orig/usr/src/nv/os-interface.c	2006-03-29 16:02:20.000000000 -0700
+++ NVIDIA-Linux-x86-1.0-8756-pkg1/usr/src/nv/os-interface.c	2006-04-27 22:33:16.000000000 -0600
@@ -58,9 +58,9 @@
 //
 typedef struct os_sema_s
 {
-    struct semaphore wait;
-    spinlock_t       lock;
-    S032             count;
+    struct completion  completion;
+    spinlock_t         lock;
+    S032               count;
 } os_sema_t;
 
 //
@@ -81,7 +81,7 @@
         return rmStatus;
 
     os_sema = (os_sema_t *)*ppSema;
-    sema_init(&os_sema->wait, 0);
+    init_completion(&os_sema->completion);
     spin_lock_init(&os_sema->lock);
     os_sema->count = 1;
 
@@ -126,7 +126,7 @@
     {
         os_sema->count--;
         spin_unlock_irqrestore(&os_sema->lock, old_irq);
-        down(&os_sema->wait);
+        wait_for_completion(&os_sema->completion);
     }
     else
     {
@@ -203,7 +203,7 @@
     spin_unlock_irqrestore(&os_sema->lock, old_irq);
 
     if (doWakeup)
-        up(&os_sema->wait);
+        complete(&os_sema->completion);
 
     return RM_OK;
 }
@@ -554,6 +554,8 @@
     }
 
     MicroSeconds = MilliSeconds * 1000;
+
+#if 0
     tm_end.tv_usec = MicroSeconds;
     tm_end.tv_sec = 0;
     timeradd(&tm_aux, &tm_end, &tm_end);
@@ -593,6 +595,7 @@
                 MicroSeconds = 0;
         } while ((jiffies = NV_USECS_TO_JIFFIES(MicroSeconds)) != 0);
     }
+#endif
 
     if (MicroSeconds > 1000)
     {
